//
// Generated file, do not edit! Created by nedtool 5.5 from core4inet/applications/examples/rt_tictoc/TicToc.msg.
//

#ifndef __CORE4INET_TICTOC_M_H
#define __CORE4INET_TICTOC_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace CoRE4INET {

/**
 * Class generated from <tt>core4inet/applications/examples/rt_tictoc/TicToc.msg:23</tt> by nedtool.
 * <pre>
 * //
 * // Messages for the rt_tictoc Examples
 * //
 * // \@author Till Steinbach
 * //
 * packet TicToc
 * {
 *     //All messages use minimum size payload
 *     byteLength = 46;
 *     //Counter transportet through the network
 *     unsigned int count = 0;
 *     //Start time to calculate roundtrip time
 *     simtime_t roundtrip_start;
 * }
 * </pre>
 */
class TicToc : public ::omnetpp::cPacket
{
  protected:
    unsigned int count;
    ::omnetpp::simtime_t roundtrip_start;

  private:
    void copy(const TicToc& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TicToc&);

  public:
    TicToc(const char *name=nullptr, short kind=0);
    TicToc(const TicToc& other);
    virtual ~TicToc();
    TicToc& operator=(const TicToc& other);
    virtual TicToc *dup() const override {return new TicToc(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getCount() const;
    virtual void setCount(unsigned int count);
    virtual ::omnetpp::simtime_t getRoundtrip_start() const;
    virtual void setRoundtrip_start(::omnetpp::simtime_t roundtrip_start);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TicToc& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TicToc& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>core4inet/applications/examples/rt_tictoc/TicToc.msg:37</tt> by nedtool.
 * <pre>
 * //
 * // Tic-Message for the rt_tictoc Examples
 * //
 * // \@author Till Steinbach
 * //
 * packet Tic extends TicToc
 * {
 *     //Request message
 *     string request = "Hello!";
 * }
 * </pre>
 */
class Tic : public ::CoRE4INET::TicToc
{
  protected:
    ::omnetpp::opp_string request;

  private:
    void copy(const Tic& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Tic&);

  public:
    Tic(const char *name=nullptr, short kind=0);
    Tic(const Tic& other);
    virtual ~Tic();
    Tic& operator=(const Tic& other);
    virtual Tic *dup() const override {return new Tic(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getRequest() const;
    virtual void setRequest(const char * request);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Tic& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Tic& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>core4inet/applications/examples/rt_tictoc/TicToc.msg:47</tt> by nedtool.
 * <pre>
 * //
 * // Toc-Message for the rt_tictoc Examples
 * //
 * // \@author Till Steinbach
 * //
 * packet Toc extends TicToc
 * {
 *     //Response message
 *     string response = "World!";
 * }
 * </pre>
 */
class Toc : public ::CoRE4INET::TicToc
{
  protected:
    ::omnetpp::opp_string response;

  private:
    void copy(const Toc& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Toc&);

  public:
    Toc(const char *name=nullptr, short kind=0);
    Toc(const Toc& other);
    virtual ~Toc();
    Toc& operator=(const Toc& other);
    virtual Toc *dup() const override {return new Toc(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getResponse() const;
    virtual void setResponse(const char * response);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Toc& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Toc& obj) {obj.parsimUnpack(b);}

} // namespace CoRE4INET

#endif // ifndef __CORE4INET_TICTOC_M_H

