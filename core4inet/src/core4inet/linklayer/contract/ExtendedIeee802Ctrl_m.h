//
// Generated file, do not edit! Created by nedtool 5.5 from core4inet/linklayer/contract/ExtendedIeee802Ctrl.msg.
//

#ifndef __CORE4INET_EXTENDEDIEEE802CTRL_M_H
#define __CORE4INET_EXTENDEDIEEE802CTRL_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
    //INET
	#include "inet/linklayer/common/Ieee802Ctrl.h"
	
	#define SWITCH_PORT_BROADCAST -1
// }}


namespace CoRE4INET {

/**
 * Class generated from <tt>core4inet/linklayer/contract/ExtendedIeee802Ctrl.msg:37</tt> by nedtool.
 * <pre>
 * //
 * // Control structure for communication between LLC and higher layers
 * //
 * // \@see ~Ieee802Ctrl
 * //
 * // \@author Till Steinbach
 * //
 * class ExtendedIeee802Ctrl extends Ieee802Ctrl
 * {
 *     int notSwitchPort = -1; // swich port index to exclude (only in swiches)
 * }
 * </pre>
 */
class ExtendedIeee802Ctrl : public ::inet::Ieee802Ctrl
{
  protected:
    int notSwitchPort;

  private:
    void copy(const ExtendedIeee802Ctrl& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ExtendedIeee802Ctrl&);

  public:
    ExtendedIeee802Ctrl();
    ExtendedIeee802Ctrl(const ExtendedIeee802Ctrl& other);
    virtual ~ExtendedIeee802Ctrl();
    ExtendedIeee802Ctrl& operator=(const ExtendedIeee802Ctrl& other);
    virtual ExtendedIeee802Ctrl *dup() const override {return new ExtendedIeee802Ctrl(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getNotSwitchPort() const;
    virtual void setNotSwitchPort(int notSwitchPort);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ExtendedIeee802Ctrl& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ExtendedIeee802Ctrl& obj) {obj.parsimUnpack(b);}

} // namespace CoRE4INET

#endif // ifndef __CORE4INET_EXTENDEDIEEE802CTRL_M_H

