//
// Generated file, do not edit! Created by nedtool 5.5 from core4inet/linklayer/ethernet/avb/AVBFrame.msg.
//

#ifndef __CORE4INET_AVBFRAME_M_H
#define __CORE4INET_AVBFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
//Auto-generated Messages
#include "core4inet/linklayer/ethernet/base/EtherFrameWithQTag_m.h"

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Winconsistent-missing-override"
#elif defined(__GNUC__) && __GNUC__ >= 5
#  pragma GCC diagnostic ignored "-Wsuggest-override"
#endif
// }}


namespace CoRE4INET {

/**
 * Class generated from <tt>core4inet/linklayer/ethernet/avb/AVBFrame.msg:39</tt> by nedtool.
 * <pre>
 * //
 * // Represents a AVB Frame
 * //
 * // \@see ~EthernetIIFrameWithQTag
 * //
 * // \@author Philipp Meyer 
 * //
 * packet AVBFrame extends EthernetIIFrameWithQTag
 * {
 *     // ID of the AVB Stream
 *     //
 *     // 64 Bit Field
 *     unsigned long streamID;
 * 
 *     string displayString = "b=15,15,rect,black,blue,5";
 * }
 * </pre>
 */
class AVBFrame : public ::CoRE4INET::EthernetIIFrameWithQTag
{
  protected:
    unsigned long streamID;
    ::omnetpp::opp_string displayString;

  private:
    void copy(const AVBFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AVBFrame&);

  public:
    AVBFrame(const char *name=nullptr, short kind=0);
    AVBFrame(const AVBFrame& other);
    virtual ~AVBFrame();
    AVBFrame& operator=(const AVBFrame& other);
    virtual AVBFrame *dup() const override {return new AVBFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned long getStreamID() const;
    virtual void setStreamID(unsigned long streamID);
    virtual const char * getDisplayString() const;
    virtual void setDisplayString(const char * displayString);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AVBFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AVBFrame& obj) {obj.parsimUnpack(b);}

} // namespace CoRE4INET

#endif // ifndef __CORE4INET_AVBFRAME_M_H

