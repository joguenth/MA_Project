//
// Generated file, do not edit! Created by nedtool 5.5 from core4inet/buffer/AS6802/TTBufferEmpty.msg.
//

#ifndef __CORE4INET_TTBUFFEREMPTY_M_H
#define __CORE4INET_TTBUFFEREMPTY_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace CoRE4INET {

/**
 * Class generated from <tt>core4inet/buffer/AS6802/TTBufferEmpty.msg:25</tt> by nedtool.
 * <pre>
 * //
 * // The message is sent by an empty TTBuffer instead of a time-triggered message, to inform
 * // the outgoing port that the reserved bandwidth may be used for other traffic classes.
 * //
 * // \@see TTQueueBuffer, TTBuffer,
 * //
 * // \@author Till Steinbach
 * message TTBufferEmpty
 * {
 * }
 * </pre>
 */
class TTBufferEmpty : public ::omnetpp::cMessage
{
  protected:

  private:
    void copy(const TTBufferEmpty& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TTBufferEmpty&);

  public:
    TTBufferEmpty(const char *name=nullptr, short kind=0);
    TTBufferEmpty(const TTBufferEmpty& other);
    virtual ~TTBufferEmpty();
    TTBufferEmpty& operator=(const TTBufferEmpty& other);
    virtual TTBufferEmpty *dup() const override {return new TTBufferEmpty(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TTBufferEmpty& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TTBufferEmpty& obj) {obj.parsimUnpack(b);}

} // namespace CoRE4INET

#endif // ifndef __CORE4INET_TTBUFFEREMPTY_M_H

