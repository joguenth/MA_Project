//
// Generated file, do not edit! Created by nedtool 5.5 from core4inet/synchronisation/base/SyncNotification.msg.
//

#ifndef __CORE4INET_SYNCNOTIFICATION_M_H
#define __CORE4INET_SYNCNOTIFICATION_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace CoRE4INET {

/**
 * Class generated from <tt>core4inet/synchronisation/base/SyncNotification.msg:27</tt> by nedtool.
 * <pre>
 * //
 * // Message used to notify application layer about synchronisation state
 * // uses SyncNotificationKind
 * //
 * // \@see ~SyncNotificationKind
 * //
 * // \@author Till Steinbach
 * //
 * message SyncNotification
 * {
 * }
 * </pre>
 */
class SyncNotification : public ::omnetpp::cMessage
{
  protected:

  private:
    void copy(const SyncNotification& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SyncNotification&);

  public:
    SyncNotification(const char *name=nullptr, short kind=0);
    SyncNotification(const SyncNotification& other);
    virtual ~SyncNotification();
    SyncNotification& operator=(const SyncNotification& other);
    virtual SyncNotification *dup() const override {return new SyncNotification(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const SyncNotification& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, SyncNotification& obj) {obj.parsimUnpack(b);}

/**
 * Enum generated from <tt>core4inet/synchronisation/base/SyncNotification.msg:37</tt> by nedtool.
 * <pre>
 * //
 * // Enum for different SyncNotification messages 
 * //
 * // \@see ~SyncNotification
 * //
 * // \@author Till Steinbach
 * //
 * enum SyncNotificationKind
 * {
 *     // TBD
 *     SYNC = 0;
 *     // TBD
 *     ASYNC = 1;
 * }
 * </pre>
 */
enum SyncNotificationKind {
    SYNC = 0,
    ASYNC = 1
};

} // namespace CoRE4INET

#endif // ifndef __CORE4INET_SYNCNOTIFICATION_M_H

