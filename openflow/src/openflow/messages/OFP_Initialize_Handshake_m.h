//
// Generated file, do not edit! Created by nedtool 5.5 from openflow/messages/OFP_Initialize_Handshake.msg.
//

#ifndef __OPENFLOW_OFP_INITIALIZE_HANDSHAKE_M_H
#define __OPENFLOW_OFP_INITIALIZE_HANDSHAKE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
    #include "openflow/openflow/protocol/OpenFlow.h"
    #include "openflow/messages/Open_Flow_Message_m.h"
// }}


namespace openflow {

/**
 * Class generated from <tt>openflow/messages/OFP_Initialize_Handshake.msg:18</tt> by nedtool.
 * <pre>
 * //Upon session establishment, the controller sends an OFP Features Request message
 * //to get information about the capabilities of a switch. This message does
 * //not contain a body beyond the OpenFlow header. The switch responds with an
 * //OFP Features Reply message.
 * packet OFP_Initialize_Handshake extends Open_Flow_Message
 * {
 * }
 * </pre>
 */
class OFP_Initialize_Handshake : public ::openflow::Open_Flow_Message
{
  protected:

  private:
    void copy(const OFP_Initialize_Handshake& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const OFP_Initialize_Handshake&);

  public:
    OFP_Initialize_Handshake(const char *name=nullptr, short kind=0);
    OFP_Initialize_Handshake(const OFP_Initialize_Handshake& other);
    virtual ~OFP_Initialize_Handshake();
    OFP_Initialize_Handshake& operator=(const OFP_Initialize_Handshake& other);
    virtual OFP_Initialize_Handshake *dup() const override {return new OFP_Initialize_Handshake(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const OFP_Initialize_Handshake& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, OFP_Initialize_Handshake& obj) {obj.parsimUnpack(b);}

} // namespace openflow

#endif // ifndef __OPENFLOW_OFP_INITIALIZE_HANDSHAKE_M_H

