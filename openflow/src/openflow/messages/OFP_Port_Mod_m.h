//
// Generated file, do not edit! Created by nedtool 5.5 from openflow/messages/OFP_Port_Mod.msg.
//

#ifndef __OPENFLOW_OFP_PORT_MOD_M_H
#define __OPENFLOW_OFP_PORT_MOD_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
    #include "openflow/openflow/protocol/OpenFlow.h"
    #include "openflow/messages/Open_Flow_Message_m.h"    
    
// }}


namespace openflow {

/**
 * Class generated from <tt>openflow/messages/OFP_Port_Mod.msg:15</tt> by nedtool.
 * <pre>
 * packet OFP_Port_Mod extends Open_Flow_Message
 * {
 *     uint32_t port_no;
 *     //uint8_t pad[4];
 *     uint8_t hw_addr[6];
 *     //uint8_t pad2[2];        //Pad to 64 bits.
 *     uint32_t config;          //Bitmap of OFPPC_* flags.
 *     uint32_t mask;            //Bitmap of OFPPC_* flags to be changed.
 *     uint32_t advertise;       //Bitmap of OFPPF_*.  Zero all bits to prevent any action taking place.
 * 	//uint8_t pad3[4];        //Pad to 64 bits
 * }
 * </pre>
 */
class OFP_Port_Mod : public ::openflow::Open_Flow_Message
{
  protected:
    uint32_t port_no;
    uint8_t hw_addr[6];
    uint32_t config;
    uint32_t mask;
    uint32_t advertise;

  private:
    void copy(const OFP_Port_Mod& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const OFP_Port_Mod&);

  public:
    OFP_Port_Mod(const char *name=nullptr, short kind=0);
    OFP_Port_Mod(const OFP_Port_Mod& other);
    virtual ~OFP_Port_Mod();
    OFP_Port_Mod& operator=(const OFP_Port_Mod& other);
    virtual OFP_Port_Mod *dup() const override {return new OFP_Port_Mod(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual uint32_t getPort_no() const;
    virtual void setPort_no(uint32_t port_no);
    virtual unsigned int getHw_addrArraySize() const;
    virtual uint8_t getHw_addr(unsigned int k) const;
    virtual void setHw_addr(unsigned int k, uint8_t hw_addr);
    virtual uint32_t getConfig() const;
    virtual void setConfig(uint32_t config);
    virtual uint32_t getMask() const;
    virtual void setMask(uint32_t mask);
    virtual uint32_t getAdvertise() const;
    virtual void setAdvertise(uint32_t advertise);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const OFP_Port_Mod& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, OFP_Port_Mod& obj) {obj.parsimUnpack(b);}

} // namespace openflow

#endif // ifndef __OPENFLOW_OFP_PORT_MOD_M_H

